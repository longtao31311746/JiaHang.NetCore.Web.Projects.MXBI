
@{
    ViewData["Title"] = "每小时营业额";
}
<style>

    .layui-layer-shade {
        display: none;
    }

    /*.layui-select-title input { width: 180px; }*/
</style>
<div>
    <span class="layui-breadcrumb">
        <a href="/">首页</a>
        <a href="/demo/">模块</a>
        <a><cite>每小时营业额</cite></a>
    </span>
    <table class="layui-hide" id="test" lay-filter="sysuser"> </table>
</div>
<script>
    var usergroups = [];
    layui.use(['table', 'element', 'layer', 'form', 'laydate'], function () {
        var table = layui.table;
        var element = layui.element;
        var layer = layui.layer;
        var form = layui.form;
        var laydate = layui.laydate;
        var generateLayer_index = 0;
        var layType = true;//true 新增  false 编辑
        var id = "";
        //日期
        laydate.render({
            elem: '#end'
            , range: true
        });
        //从url中获取参数
        var theRequest = GetRequest();

        console.log(theRequest);


        table.render({
            elem: '#test'
            , url: '/api/FactTradeHourData/search/'
            , contentType: 'application/json'
            , where: theRequest
            , method: 'post'
            , parseData: function (res) { //res 即为原始返回的数据
                return {
                    "status": res.isSuccess,
                    "code": res.isSuccess == true ? 0 : 1, //解析接口状态
                    "msg": res.message, //解析提示文本
                    "count": res.content.total, //解析数据长度
                    "data": res.content.data //解析数据列表
                };
            }
            , cols: [[
                { field: 'tradeTimeEnd', title: '小时', sort: true, fixed: 'left', totalRowText: '合计：' }
                , { field: 'tradeMoneey', title: '营业额', sort: true, totalRow: true }
                , { field: 'tc', title: 'TC', totalRow: true }
                , { field: 'cover', title: 'COVER', sort: true, totalRow: true }
                , { field: 'totalAc', title: 'AC', totalRow: true }
            ]]
            , id: 'testReload'
            //, page: true
            , totalRow: true //开启合计行
            //, toolbar: 'default'//开启工具栏默认
            , defaultToolbar: ['filter', 'print', 'exports']
            , text: {
                none: '暂无相关数据' //默认：无数据。注：该属性为 layui 2.2.5 开始新增
            }
        });


        table.on('checkbox(sysuser)', function (obj) {

        });
        //监听工具条
        table.on('tool(sysuser)', function (obj) {
            var data = obj.data;
            if (obj.event === 'detail') {
                layer.msg('ID：' + data.id + ' 的查看操作');
            } else if (obj.event === 'del') {

                let confirm_title = "确认删除[" + data.name + "]系统用户组的记录么?";
                if (data.level != "三级用户组")
                    confirm_title += "<Br/>" + "&nbsp;&nbsp;该用户组下的所有用户组也将被删除!"
                layer.confirm(confirm_title, function (index) {
                    layer.close(index);
                    axios.delete('/api/sysusergroupdata/' + data.id)
                        .then(function (response) {

                            layer.msg(response.data.message);
                            if (!response.data.isSuccess) {
                                return;
                            }
                            //obj.del();
                            window.location.reload();
                        })
                        .catch(function (error) {
                            console.log(error);
                        });

                });
            } else if (obj.event === 'edit') {
                id = data.id
                layType = false;
                showLayer(data);
            }
        });

        var $ = layui.$, active = {
            getCheckData: function () { //获取选中数据
                var checkStatus = table.checkStatus('testReload')
                    , data = checkStatus.data;


                layer.confirm("确认删除" + data.length + "条记录么", function (index) {
                    layer.close(index);

                    let ids = [];
                    let parms = "?";
                    for (let i = 0; i < data.length; i++) {
                        ids.push(data[i].id);
                        parms += "ids=" + data[i].id + "&";
                    }
                    parms = parms.substring(0, parms.length - 1);
                    //layer.alert(JSON.stringify(data));
                    axios.delete("/api/sysmodule/batchdelete/" + parms)
                        .then(function (response) {

                            layer.msg(response.data.message);
                            if (!response.data.isSuccess) {
                                return;
                            }

                            //移除
                            let tabledata = table.cache.testReload;

                            tableReload(tabledata);


                        })
                        .catch(function (error) {
                            layer.msg("发生了预料之外的错误!");
                            console.log(error);
                        });
                });


            },
            //查询操作传参数
            search: function () {

                let pars = {
                    limit: 10,
                    page: 1,
                    stRegion: $("#search_region").val(),
                    stCity: $("#search_city").val(),
                    stDM: $("#search_dm").val(),
                    //StartTime: laydate,
                    //EndTime: laydate,
                }
                //执行重载

                table.reload('testReload', {
                    where: pars,
                    contentType: 'application/json',
                    method: 'post'
                });
            },
        };
        form.on('submit(submit)', function () {
            //获取父级id
            var parentid = $("#first_select").val();

            if (parentid != "") {
                var secondid = $("#second_select").val();
                if (secondid != "") {
                    parentid = secondid;
                }
            }


            let model = {
                name: $("#name").val(),
                parentid: parentid
            };


            let url = "/api/sysusergroupdata";
            let method = "POST";
            if (layType != true) {
                url = "/api/sysusergroupdata/" + id;
                method = "PUT";
            }
            axios({ url: url, method: method, data: model })
                .then(function (response) {

                    layer.msg(response.data.message);
                    if (!response.data.isSuccess) {
                        return;
                    }
                    let datatable = table.cache.testReload;

                    if (layType != true) {
                        //修改
                        for (let i = 0; i < datatable.length; i++) {
                            if (datatable[i].id == response.data.content.id) {
                                datatable.splice(i, 1, response.data.content);
                                break;
                            }
                        }
                    }
                    else {
                        //新增
                        datatable.unshift(response.content)

                    }
                    // tableReload(datatable)
                    window.location.reload();
                    layer.close(generateLayer_index);
                })
                .catch(function (error) {

                    layer.msg("发生了预料之外的错误!");
                    console.log(error);
                });

            return false; //阻止表单跳转。如果需要表单跳转，去掉这段即可。
        })
        //第一个下拉框的改变事件
        form.on('select(first-select)', function (data) {

            initSecondSelect(data.value, "");
            console.log(data.value);
            if (data.value == "") {
                $("#second_select").attr("disabled", "disabled");
                $("#level").val("一级用户组");
                return;
            }
            //$("#level").attr('disabled', true);
            $("#level").val("二级用户组");
            $("#second_select").removeAttr("disabled");

        })

        form.on('select(second-select)', function (data) {
            if (data.value == "") {
                $("#level").val("二级用户组");
                return;
            }
            $("#level").val("三级用户组");
        })

        $('.layui-btn').on('click', function () {
            var type = $(this).data('type');
            active[type] ? active[type].call(this) : '';
        });

        init();
        function init() {
            getUserGroups();

        }
        //获取用户组
        function getUserGroups() {

            axios.get('/api/sysusergroupdata/acquisitionmodule')
                .then(function (response) {

                    usergroups = response.data;

                    if (response.data.length == 0) return;
                    //for (let i = 0;i<res)
                    //$('#first_select').append(new Option(res.xm, item.id));
                    initFirstSelect("");
                })
                .catch(function (error) {
                    console.log(error);
                });

        };
        //初始化第一个下拉框
        function initFirstSelect(id) {
            console.log("init_select:" + id);
            $("#first_select").html("");
            $('#first_select').append(new Option("不选择", ""));
            if (usergroups.length == 0) {
                form.render('select');
                return;
            }
            for (let i = 0; i < usergroups.length; i++) {
                $('#first_select').append(new Option(usergroups[i].name, usergroups[i].id));
            }
            if (id != null && id != "") {

                $("select[name='result']").val(11);
                var select = 'dd[lay-value=' + id + ']';
                $('#first_select').siblings("div.layui-form-select").find('dl').find(select).click();
            }

            form.render('select');
        }
        //初始化第二个下拉框
        function initSecondSelect(id, secondid) {
            console.log("init_second_select:" + id);
            let childs_module = [];
            for (let i = 0; i < usergroups.length; i++) {
                if (usergroups[i].id == id) {
                    childs_module = usergroups[i].listChilds;
                    break;
                }
            }
            console.log(childs_module);

            $("#second_select").html("");
            $('#second_select').append(new Option("不选择", ""));
            if (childs_module.length == 0) {
                form.render('select');
                return;
            }

            $('#second_select').append(new Option("", ""));
            for (let j = 0; j < childs_module.length; j++) {
                $('#second_select').append(new Option(childs_module[j].name, childs_module[j].id));
            }

            if (secondid != null && secondid != "") {
                var select = 'dd[lay-value=' + secondid + ']';
                console.log(select);
                $('#second_select').siblings("div.layui-form-select").find('dl').find(select).click();
            }
            //form.render('select', 'second-module');
            form.render('select');
        }

        //展示编辑页

        //初始化Form值
        function initFormValue(data) {
            $("#first_select").removeAttr("disabled");
            $("#second_select").removeAttr("disabled");
            if (data == undefined) {

                form.val("generate-form", {
                    name: "",
                    firstid: "",
                    secondid: ""
                })
                return;
            }

            form.val("generate-form", {
                name: data.name,
                firstId: data.firstId,
                secondId: data.secondId
            });

            $("#level").val(data.level);


            form.render('select');
            //初始化第一个下拉框
            initFirstSelect(data.firstId);
            //初始化第二个下拉框
            initSecondSelect(data.firstId, data.secondId);
            if (data.level == "一级用户组") {
                $("#first_select").attr("disabled", "disabled");
                $("#second_select").attr("disabled", "disabled");
            }
            if (data.level == "二级用户组") {
                $("#second_select").attr("disabled", "disabled");
            }
            form.render('select');

        }
        function tableReload(datatable) {

            table.reload("testReload", {
                data: datatable
            })
        }

    });
    //function GetRequest() {
    //    var url = location.search; //获取url中"?"符后的字串
    //    var theRequest = new Object();
    //    if (url.indexOf("?") != -1) {
    //        var str = url.substr(1);
    //        strs = str.split("&");
    //        for (var i = 0; i < strs.length; i++) {
    //            theRequest[strs[i].split("=")[0]] = unescape(strs[i].split("=")[1]);
    //        }
    //    }
    //    return theRequest;
    //}
    function GetRequest() {
        var url = location.search;
        var theRequest = new Object();
        if (url.indexOf("?") != -1) {
            var str = url.substr(1);
            strs = str.split("&");
            for (var i = 0; i < strs.length; i++) {

                //采用decodeURI进行解码 取代unescape  
                theRequest[strs[i].split("=")[0]] = decodeURI(strs[i].split("=")[1]);
            }
        }
        return theRequest;
    }
</script>


@{
    ViewData["Title"] = "Index";   
    ViewBag.RangeTime = "'"+DateTime.Now.AddMonths(-1).ToString("yyyy-MM-dd") + " - " + DateTime.Now.ToString("yyyy-MM-dd")+"'";
}
<style>

    .layui-layer-shade {
        display: none;
    }

    /*.layui-select-title input { width: 180px; }*/
</style>
<div>
    <span class="layui-breadcrumb">
        <a href="/">首页</a>
        <a href="/demo/">模块</a>
        <a><cite>每日营业额</cite></a>
    </span>
    <div class="layui-form" style="background-color:#F2F2F2;padding:30px 20px;margin-top:20px;">
        <div class="layui-form-item">
            区域：
            <div class="layui-inline">
                <select name="interest" id="search_region" lay-filter="region">
                    <option value=""></option>

                </select>
            </div>
            城市：
            <div class="layui-inline">
                <select name="interest" id="search_city" lay-filter="city">
                    <option value=""></option>

                </select>
            </div>
            DM：
            <div class="layui-inline">
                <select name="interest" id="search_dm" lay-filter="dm">
                    <option value=""></option>

                </select>
            </div>
            <div class="layui-inline">
                <label class="layui-form-label">日期范围</label>
                <div class="layui-input-inline">
                    <input type="text" class="layui-input" id="end" placeholder="">
                </div>
            </div>
        </div>
        <div class="layui-form-item" style="margin-top:30px;">
            <button class="layui-btn btn-search" data-type="search">条件查询</button>
            <a class="layui-btn" data-type="export">导出</a>

            @*<button class="layui-btn" data-type="getCheckData">选中行删除</button>*@
        </div>
    </div>
    <table class="layui-hide" id="test" lay-filter="sysuser"> </table>
</div>
<script type="text/html" id="barDemo">
    {{# if(d.tradeDate == ""){ }}
    <span style="color:red"></span>
    {{# }else if(d.tradeDate != "汇总:"){ }}
    <button class="layui-btn layui-btn-xs" lay-event="detail">小时</button>
    {{# } }}
</script>
<script>
    var cityData = [];
    var cityOptions = [];
    layui.use(['table', 'element', 'layer', 'form', 'laydate'], function () {
        var table = layui.table;
        var element = layui.element;
        var layer = layui.layer;
        var form = layui.form;
        var laydate = layui.laydate;
        var generateLayer_index = 0;
        var layType = true;//true 新增  false 编辑
        var id = "";

        //日期      
        laydate.render({
            elem: '#end'
            , range: true,          
            value: @Html.Raw(ViewBag.RangeTime)
        });
        //传入Date对象给初始值
        

        table.render({
            elem: '#test'
            , url: '/api/FactTradeInfoData/search/'
            , contentType: 'application/json'
            , method: 'post'
            , parseData: function (res) { //res 即为原始返回的数据
                return {
                    "status": res.isSuccess,
                    "code": res.isSuccess == true ? 0 : 1, //解析接口状态
                    "msg": res.message, //解析提示文本
                    "count": res.content.total, //解析数据长度
                    "data": res.content.data //解析数据列表
                };
            }
            , cols: [[
                { field: 'tradeDate', title: '交易日期', sort: true, fixed: 'left' }
                , { field: 'week', title: '星期', fixed: 'left' }
                , { field: 'totalTradeMoney', title: '营业额', sort: true }
                , { field: 'totalTc', title: 'TC', totalRow: true }
                , { field: 'totalCover', title: 'COVER', sort: true  }
                , { field: 'totalAc', title: 'AC', totalRow: true }
                , { fixed: 'right', title: '每小时', align: 'center', toolbar: '#barDemo', fixed: 'right' } //这里的toolbar值是模板元素的选择器
            ]]
            , id: 'testReload'
            , page: true
            //, totalRow: true //开启合计行
            //, toolbar: 'default'//开启工具栏默认
            , defaultToolbar: ['filter', 'print', 'exports']
            , text: {
                none: '暂无相关数据' //默认：无数据。注：该属性为 layui 2.2.5 开始新增
            }
        });


        table.on('checkbox(sysuser)', function (obj) {

        });
        //监听工具条
        table.on('tool(sysuser)', function (obj) {
            var data = obj.data;
            if (obj.event === 'detail') {
                //每小时
                //中文乱码问题
                let stDM = encodeURIComponent ($("#search_dm").val());
                let url = "/FactTradeHour/index?tradeDate=" + data.tradeDate + "&stRegion=" + $("#search_region").val() + "&stCity=" + $("#search_city").val() + "&stDM=" + $("#search_dm").val();
                console.log(stDM)
                window.open(url, '_blank');

            }
            else if (obj.event === 'del') {

                let confirm_title = "确认删除[" + data.name + "]系统用户组的记录么?";
                if (data.level != "三级用户组")
                    confirm_title += "<Br/>" + "&nbsp;&nbsp;该用户组下的所有用户组也将被删除!"
                layer.confirm(confirm_title, function (index) {
                    layer.close(index);
                    axios.delete('/api/sysusergroupdata/' + data.id)
                        .then(function (response) {

                            layer.msg(response.data.message);
                            if (!response.data.isSuccess) {
                                return;
                            }
                            //obj.del();
                            window.location.reload();
                        })
                        .catch(function (error) {
                            console.log(error);
                        });

                });
            } else if (obj.event === 'edit') {
                id = data.id
                layType = false;
                showLayer(data);
            }
        });

        var $ = layui.$, active = {
            getCheckData: function () { //获取选中数据
                var checkStatus = table.checkStatus('testReload')
                    , data = checkStatus.data;


                layer.confirm("确认删除" + data.length + "条记录么", function (index) {
                    layer.close(index);

                    let ids = [];
                    let parms = "?";
                    for (let i = 0; i < data.length; i++) {
                        ids.push(data[i].id);
                        parms += "ids=" + data[i].id + "&";
                    }
                    parms = parms.substring(0, parms.length - 1);
                    //layer.alert(JSON.stringify(data));
                    axios.delete("/api/sysmodule/batchdelete/" + parms)
                        .then(function (response) {

                            layer.msg(response.data.message);
                            if (!response.data.isSuccess) {
                                return;
                            }

                            //移除
                            let tabledata = table.cache.testReload;

                            tableReload(tabledata);


                        })
                        .catch(function (error) {
                            layer.msg("发生了预料之外的错误!");
                            console.log(error);
                        });
                });


            },
            //查询操作传参数
            search: function () {
                //var a = laydate.split("-"); //在-分解
                //log.console(a);
                let date_region = document.getElementById("end").value;
                let _start = "", _end = "";
                if (date_region != "") {
                    _start = date_region.split(" - ")[0];
                    _end = date_region.split(" - ")[1];
                }
                let pars = {
                    limit: 10,
                    page: 1,
                    stRegion: $("#search_region").val(),
                    stCity: $("#search_city").val(),
                    stDM: $("#search_dm").val(),
                    StartTime: _start + " 00:00:00",
                    EndTime: _end + " 00:00:00",
                }
                //执行重载

                table.reload('testReload', {
                    where: pars,
                    contentType: 'application/json',
                    method: 'post'
                });
            },

            //导出
            export: function () {
                console.log('export');

                let date_region = document.getElementById("end").value;
                let _start = "", _end = "";
                if (date_region != "") {
                    _start = date_region.split(" - ")[0];
                    _end = date_region.split(" - ")[1];
                }
                let pars = {
                    stRegion: $("#search_region").val(),
                    stCity: $("#search_city").val,
                    stDM: $("#search_dm").val,
                    StartTime: _start + " 00:00:00",
                    EndTime: _end + " 00:00:00",
                };
                //,string stRegion,string stCity, string stDM
                let url = "/api/facttradeinfodata/export?StartTime=" + _start + "&EndTime=" + _end + "&stRegion=" + $("#search_region").val() + "&stCity=" + $("#search_city").val() + "&stDM=" + $("#search_dm").val();
                window.location.href = url;

                //axios.post('/api/facttradeinfodata/export', pars)
                //    .then(function (response) {
                //        console.log(response);
                //        const content = response.data;
                //      var  blobOptions = blobOptions || {};
                //        const blob = new Blob([content], blobOptions)
                //        const fileName = '每日营业额.xlsx'
                //        if ('download' in document.createElement('a')) { // 非IE下载
                //            const elink = document.createElement('a')
                //            elink.download = fileName
                //            elink.style.display = 'none'
                //            elink.href = URL.createObjectURL(blob)
                //            document.body.appendChild(elink)
                //            elink.click()
                //            URL.revokeObjectURL(elink.href) // 释放URL 对象
                //            document.body.removeChild(elink)
                //        } else { // IE10+下载
                //            navigator.msSaveBlob(blob, fileName)
                //        }
                //    })
                //    .catch(function (error) {
                //        console.log(error);
                //    });
            }
        };
        form.on('submit(submit)', function () {
            //获取父级id
            var parentid = $("#first_select").val();

            if (parentid != "") {
                var secondid = $("#second_select").val();
                if (secondid != "") {
                    parentid = secondid;
                }
            }


            let model = {
                name: $("#name").val(),
                parentid: parentid
            };


            let url = "/api/sysusergroupdata";
            let method = "POST";
            if (layType != true) {
                url = "/api/sysusergroupdata/" + id;
                method = "PUT";
            }
            axios({ url: url, method: method, data: model })
                .then(function (response) {

                    layer.msg(response.data.message);
                    if (!response.data.isSuccess) {
                        return;
                    }
                    let datatable = table.cache.testReload;

                    if (layType != true) {
                        //修改
                        for (let i = 0; i < datatable.length; i++) {
                            if (datatable[i].id == response.data.content.id) {
                                datatable.splice(i, 1, response.data.content);
                                break;
                            }
                        }
                    }
                    else {
                        //新增
                        datatable.unshift(response.content)

                    }
                    // tableReload(datatable)
                    window.location.reload();
                    layer.close(generateLayer_index);
                })
                .catch(function (error) {

                    layer.msg("发生了预料之外的错误!");
                    console.log(error);
                });

            return false; //阻止表单跳转。如果需要表单跳转，去掉这段即可。
        })
        //第一个下拉框的改变事件
        form.on('select(region)', function (data) {
            $("#search_dm").html("");
            $('#search_dm').append(new Option("", ""));
            initSecondSelect(data.value);

        })
        //第二个下拉框的改变事件
        form.on('select(city)', function (data) {
            console.log(data);
            initThreeSelect(data.value);
        })

        $('.layui-btn').on('click', function () {
            var type = $(this).data('type');
            active[type] ? active[type].call(this) : '';
        });

        init();
        function init() {
            //  getUserGroups();
            getCityData();

        }

        //初始化第一个下拉框
        function initFirstSelect(stregion) {
            console.log("init_select:" + stregion);
            $("#search_region").html("");
            $('#search_region').append(new Option("全国", ""));
            if (cityData.length == 0) {
                form.render('select');
                return;
            }
            for (let i = 0; i < cityData.length; i++) {
                $('#search_region').append(new Option(cityData[i].stregion, cityData[i].stregion));
            }
            if (stregion != null && stregion != "") {

                //$("select[name='result']").val(11);
                var select = 'dd[lay-value=' + stregion + ']';
                $('#search_region').siblings("div.layui-form-select").find('dl').find(select).click();
            }

            form.render('select');
        }
        //初始化第二个下拉框
        function initSecondSelect(stregion) {
            console.log("init_second_select:" + stregion);
            let listStcity = [];
            for (let i = 0; i < cityData.length; i++) {
                console.log(cityData[i].stregion);
                if (cityData[i].stregion == stregion) {
                    listStcity = cityData[i].listStcity;
                    break;
                }
            }
            console.log(listStcity);
            $("#search_city").html("");
            $('#search_city').append(new Option("", ""));
            cityOptions = listStcity;
            for (let j = 0; j < listStcity.length; j++) {
                $('#search_city').append(new Option(listStcity[j].stcity, listStcity[j].stcity));
            }
            form.render('select');
        }
        //初始化第三个下拉框
        function initThreeSelect(stcity) {
            console.log(cityOptions);
            console.log("init_Threeselect:" + stcity);
            //获取不到值undefined
            let listStdm = [];
            for (let i = 0; i < cityOptions.length; i++) {

                if (cityOptions[i].stcity == stcity) {
                    listStdm = cityOptions[i].listStdm;
                    break;
                }
            }
            console.log(listStdm);
            $("#search_dm").html("");
            $('#search_dm').append(new Option("", ""));

            for (let j = 0; j < listStdm.length; j++) {
                $('#search_dm').append(new Option(listStdm[j].stdm, listStdm[j].stdm));
            }
            form.render('select');
        }

        //初始化Form值
        function initFormValue(data) {
            $("#first_select").removeAttr("disabled");
            $("#second_select").removeAttr("disabled");
            if (data == undefined) {

                form.val("generate-form", {
                    name: "",
                    firstid: "",
                    secondid: ""
                })
                return;
            }

            form.val("generate-form", {
                name: data.name,
                firstId: data.firstId,
                secondId: data.secondId
            });

            $("#level").val(data.level);


            form.render('select');
            //初始化第一个下拉框
            initFirstSelect(data.firstId);
            //初始化第二个下拉框
            initSecondSelect(data.firstId, data.secondId);
            if (data.level == "一级用户组") {
                $("#first_select").attr("disabled", "disabled");
                $("#second_select").attr("disabled", "disabled");
            }
            if (data.level == "二级用户组") {
                $("#second_select").attr("disabled", "disabled");
            }
            form.render('select');

        }
        function tableReload(datatable) {

            table.reload("testReload", {
                data: datatable
            })
        }

        //联动数据
        function getCityData() {
            axios.get('/api/facttradeinfodata/acquisitioncitydata')
                .then(function (response) {
                    console.log(response);
                    cityData = response.data.content;
                    initFirstSelect();
                })
                .catch(function (error) {
                    console.log(error);
                });
        }
    });



</script>

